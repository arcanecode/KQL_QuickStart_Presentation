//------------------------------------------------------------------------------
// Kusto Query Language (KQL) QuickStart
//
// This contains the demos used in the KQL QuickStart Presentation
//
// Copyright (c) 2018, 2022. Robert C. Cain.
// All rights reserved. This code may be used in part within your own
// applications.
//
// This code may NOT be redistributed in it's entirely without permission
// of one of it's copyright holders.
//------------------------------------------------------------------------------

// This is a comment

//------------------------------------------------------------------------------
// Use the left/right arrow on the left of this window, at the top to expand
// the schema pane.
//
// In the ACTIVE area, is Demo. While not an exact analogy it is similar
// to a database server.
//
// Under it are Table Groups. Table groups are kind of like databases, but
// more accurately would be a way to collect a group of tables together.
// Unlike a database, a table can be in more than one table group.
//
// Each table exposes a list of columns containing the actual data.
//------------------------------------------------------------------------------

// To retrieve data, you can simply enter the table name and hit the
// Run button at the top, or use SHIFT+ENTER
// Be warned just a table name has the potential to return a lot of data, so
// be patient if you execute this kind of query.

// This is a comment

// Contrasting with SQL
// To get all rows from the Perf table in SQL, you'd need:
// SELECT * FROM Perf

// In KQL, we can simply use:
Perf

// A bit more complex query
// SELECT TOP 100 * FROM Perf
// WHERE CounterName = "Free Megabytes"
// ORDER BY CounterValue

Perf |
where CounterName == "Free Megabytes" |
top 100 by CounterValue


//------------------------------------------------------------------------------
// Syntax Flexibility
//------------------------------------------------------------------------------

// Syntax is flexible - Pipe can be at the start
Perf
| where CounterName == "Free Megabytes"
| top 100 by CounterValue

// We can also choose to indent lines if we wish
Perf
  | where CounterName == "Free Megabytes"
  | top 100 by CounterValue

// It can also all be on a single line
Perf | where CounterName == "Free Megabytes" | top 100 by CounterValue

// You do have intellisense! (Type out the above query to demonstrate)

//------------------------------------------------------------------------------
// Some notes on case
//------------------------------------------------------------------------------
// KQL is case senstive, unlike SQL. Perf is not the same as perf or PERF
// Likewise with column names. CounterName, not countername or COUNTERNAME

// Commands are also case senstive. top works, TOP or Top does not

//------------------------------------------------------------------------------
// Some more on where
//------------------------------------------------------------------------------

// Example 1 - Basic Where
Perf
| where TimeGenerated >= ago(1h)

// Example 2 - Where with Logical Joins
Perf
| where TimeGenerated  >= ago(1h)
    and CounterName == "Bytes Received/sec"

// Example 3 - Multiple Ands Allowed
Perf
| where TimeGenerated  >= ago(1h)
    and CounterName == "Bytes Received/sec"
    and CounterValue > 0


// Example 4 - OR logic is allowed too!
Perf
| where TimeGenerated  >= ago(1h)
    and (CounterName == "Bytes Received/sec"
         or
         CounterName == "% Processor Time"
        )

// Example 5 -  Combining and's and or's
Perf
| where TimeGenerated  >= ago(1h)
    and (CounterName == "Bytes Received/sec"
         or
         CounterName  == "% Processor Time"
        )
    and CounterValue > 0

// Example 6 - Stacking Where Operators
Perf
| where TimeGenerated  >= ago(1h)
| where (CounterName == "Bytes Received/sec"
         or
         CounterName  == "% Processor Time"
        )
| where CounterValue > 0

//------------------------------------------------------------------------------
// The search operator
//------------------------------------------------------------------------------

// Example 1 - Basic Search
Perf
| search "Memory"

// Example 2 - Formatting
Perf | search "Memory"

// Example 3.1 - Case Sensitivity - Case Insensitive by Default
Perf
| search "memory"

// Example 3.2 - Making Search Case Sensitive
Perf
| search kind=case_sensitive "memory"

// Example 4 - Searching Everything In The Database
// (Not recommended that you run this)
search "Memory"

// Example 5 - Search Multiple Tables
search in (Perf, Event, Alert) "Memory"

// Example 6 - Search A Specific Column
Perf
| search CounterName == "Available MBytes"

// Example 7 - Search For Text Anywhere In The Column
Perf
| search CounterName:"MBytes"

//------------------------------------------------------------------------------
// Take
//------------------------------------------------------------------------------

// Examle 1 - Take Basics
Perf
| take 10

// Example 2 - Building With Take
// Step 1
Perf
| where TimeGenerated >= ago(1h)
| take 5

// Step 2
Perf
| where TimeGenerated >= ago(1h)
    and CounterName == "Available MBytes"
| take 5

//------------------------------------------------------------------------------
// Count
//------------------------------------------------------------------------------

// Example 1 - Count Basics
Perf
| count

// Example 2 - Using Count Like Take
Perf
| where TimeGenerated  >= ago(1h)
    and CounterName == "Bytes Received/sec"
    and CounterValue > 0
| count

// Example 3 - Pairing Down Your Data
Perf
| where TimeGenerated  >= ago(1h)
| count

Perf
| where CounterName == "Bytes Received/sec"
    and CounterValue > 0
| count

Perf
| where TimeGenerated  >= ago(1h)
    and CounterName == "Bytes Received/sec"
    and CounterValue > 0
| count

//------------------------------------------------------------------------------
// Summarize
//------------------------------------------------------------------------------

// Example 1 - Summarize Bssics
Perf
| summarize count() by CounterName

// Example 2 - Summarize by two columns, flexible formatting
Perf
| summarize PerfCount = count()
         by ObjectName
          , CounterName

// Example 3 - Summarize With Other Aggregations
Perf
| where CounterName == "% Free Space"
| summarize NumberOfEntries  = count()
          , AverageFreeSpace = avg(CounterValue)
          , MinFreeSpace     = min(CounterValue)
          , MaxFreeSpace     = max(CounterValue)
          , SumFreeSpace     = sum(CounterValue)
         by CounterName

//------------------------------------------------------------------------------
// Extend
//------------------------------------------------------------------------------

// Example 1 - Extend Basics
Perf
| where CounterName == "Free Megabytes"
| take 10
| extend FreeGB = CounterValue / 1000

// Example 2 - Repeating A Column With Extend
Perf
| where CounterName == "Free Megabytes"
| take 10
| extend FreeGB = CounterValue / 1000
       , FreeMB = CounterValue
       , FreeKB = CounterValue * 1000

// Example 3 - Created Calculated Values with Text Data
Perf
| take 10
| extend ObjectCounter = strcat(ObjectName, " - ", CounterName)

//------------------------------------------------------------------------------
// Project
//------------------------------------------------------------------------------

// Example 1 - Project Basics
Perf
| take 100
| project ObjectName
        , CounterName
        , InstanceName
        , CounterValue
        , TimeGenerated


// Example 2 - Project and Extend
Perf
| where CounterName == "Free Megabytes"
| take 100
| project ObjectName
        , CounterName
        , InstanceName
        , CounterValue
        , TimeGenerated
| extend FreeGB = CounterValue / 1000
       , FreeMB = CounterValue
       , FreeKB = CounterValue * 1000


// Example 3 - Using Projected Columns In Calculations
Perf
| where CounterName == "Free Megabytes"
| take 100
| extend FreeGB = CounterValue / 1000
       , FreeMB = CounterValue
       , FreeKB = CounterValue * 1000
| project ObjectName
        , CounterName
        , InstanceName
        , TimeGenerated
        , FreeGB
        , FreeKB
        , FreeMB


// Example 4 - Projecting Calculated Values
Perf
| where CounterName == "Free Megabytes"
| take 100
| project ObjectName
        , CounterName
        , InstanceName
        , TimeGenerated
        , FreeGB = CounterValue / 1000
        , FreeMB = CounterValue
        , FreeKB = CounterValue * 1000

//------------------------------------------------------------------------------
// Top
//------------------------------------------------------------------------------

// Example 1 - Top Basics
Perf
| top 20 by TimeGenerated desc


// Example 2 - Top Troubleshooting
Perf
| where TimeGenerated >= ago(10m)
| where CounterName == "Free Megabytes"
| distinct Computer
         , CounterName
         , CounterValue
| top 10 by CounterValue asc
